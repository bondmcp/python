# =============================================================================
# WORKFLOW: Security & Compliance (Enterprise Grade)
# PURPOSE: Advanced security scanning, SAST, DAST, and compliance checks
# TRIGGERS: Push to main, PRs, weekly schedule, security events
# MAINTAINER: Aurora Capital DevOps Team
# LAST UPDATED: 2025-09-07
# DOCUMENTATION: See .github/workflows/README.md
# =============================================================================

name: 02 - Security & Compliance

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly Monday 2 AM
  workflow_dispatch:
    inputs:
      scan_type:
        description: 'Type of security scan'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - quick
        - compliance

env:
  SCAN_TYPE: ${{ github.event.inputs.scan_type || 'full' }}

jobs:
  security-scan:
    name: Comprehensive Security Scan
    runs-on: ubuntu-latest
    
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better analysis
      
    - name: Cache security tools
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/trivy
          ~/.cache/semgrep
        key: ${{ runner.os }}-security-tools-${{ hashFiles('**/package-lock.json', '**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-security-tools-
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
      continue-on-error: true
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
      continue-on-error: true

    - name: Run Semgrep SAST
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      continue-on-error: true

    - name: CodeQL Analysis
      if: env.SCAN_TYPE == 'full'
      uses: github/codeql-action/init@v2
      with:
        languages: javascript,python
        
    - name: Autobuild for CodeQL
      if: env.SCAN_TYPE == 'full'
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      if: env.SCAN_TYPE == 'full'
      uses: github/codeql-action/analyze@v2

  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      if: hashFiles('package.json') != ''
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      if: hashFiles('package.json') != ''
      run: npm ci
      
    - name: Run npm audit
      if: hashFiles('package.json') != ''
      run: |
        npm audit --audit-level moderate --json > npm-audit.json || echo "Audit completed"
        npm audit --audit-level moderate || echo "Audit completed with warnings"
      
    - name: Setup Python
      if: hashFiles('requirements.txt') != ''
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install Python dependencies
      if: hashFiles('requirements.txt') != ''
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety pip-audit
        
    - name: Run Python security checks
      if: hashFiles('requirements.txt') != ''
      run: |
        safety check --json --output safety-report.json || echo "Safety check completed"
        pip-audit --format=json --output=pip-audit.json || echo "Pip audit completed"
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dependency-security-reports
        path: |
          npm-audit.json
          safety-report.json
          pip-audit.json
        retention-days: 30
      continue-on-error: true

  compliance-check:
    name: Compliance & Policy Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event.inputs.scan_type == 'compliance'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check for required files
      run: |
        echo "üîç Checking compliance requirements..."
        
        # Security policy
        if [ ! -f SECURITY.md ]; then
          echo "‚ùå SECURITY.md missing"
          exit 1
        else
          echo "‚úÖ SECURITY.md found"
        fi
        
        # License
        if [ ! -f LICENSE ]; then
          echo "‚ö†Ô∏è LICENSE file missing"
        else
          echo "‚úÖ LICENSE found"
        fi
        
        # Code of conduct
        if [ ! -f CODE_OF_CONDUCT.md ]; then
          echo "‚ö†Ô∏è CODE_OF_CONDUCT.md missing"
        else
          echo "‚úÖ CODE_OF_CONDUCT.md found"
        fi
        
        echo "‚úÖ Compliance check completed"
